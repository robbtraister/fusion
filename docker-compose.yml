version: '2'
services:
  origin:
    build: ./origin
    environment:
      NODE_ENV:
      HTTP_ENGINE: http://engine.fusion:8080
      HTTP_RESOLVER: http://resolver.fusion:8080
      LAMBDA_ENGINE:
      LAMBDA_RESOLVER:
      ON_DEMAND:
    image: fusion-origin
    links:
      - 'engine:engine.fusion'
      - 'resolver:resolver.fusion'
    ports:
      - '8080:8080'
      - '8081:8081'
    volumes:
      - '~/.aws:/home/nginx/.aws:ro'
      - './origin/src:/etc/nginx/src:ro'

  dao:
    build: ./dao
    environment:
      NODE_ENV:
      LOCALHOST_CREDENTIALS: abc:def
      LOCALHOST_MONGOURL:
    image: fusion-dao
    ports:
      - '8090:8080'
      - '8091:8081'
    volumes:
      - './dao/src:/etc/nginx/src:ro'

  engine:
    build:
      context: .
      dockerfile: serverless.Dockerfile
      args:
        LAMBDA: engine
    environment:
      NODE_ENV:
      DEBUG: fusion:*
      ON_DEMAND:
      CONTENT_BASE:
      DAO_URL: http://abc:def@localhost.dao.fusion:8080
    image: fusion-engine
    links:
      - 'dao:localhost.dao.fusion'
    ports:
      - '9001:8080'
    volumes:
      - './engine/bundle:/workdir/engine/bundle:ro'
      - './engine/src:/workdir/engine/src:ro'

  resolver:
    build:
      context: .
      dockerfile: serverless.Dockerfile
      args:
        LAMBDA: resolver
    environment:
      NODE_ENV:
      HTTP_ENGINE: http://engine.fusion:8080
      LAMBDA_ENGINE:
    image: fusion-resolver
    links:
      - 'engine:engine.fusion'
    ports:
      - '9002:8080'
    volumes:
      - './resolver/config:/workdir/resolver/config:ro'
      - './resolver/src:/workdir/resolver/src:ro'
