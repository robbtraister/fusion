version: '2'
services:
  entry-proxy:
    build: ./proxy
    environment:
      PORT: '8080'
      NODEJS_PORT: '8081'
      WATCH: 'true'
      HTTP_ENGINE: http://engine-server:8082
      HTTP_RESOLVER: http://resolver-server:8083
      LAMBDA_ENGINE:
      LAMBDA_RESOLVER:
    image: fusion-proxy
    links:
      - 'engine-server'
      - 'resolver-server'
    ports:
      - "8080-8081:8080-8081"
    volumes:
      - '~/.aws:/home/nginx/.aws:ro'
      - './proxy/src:/etc/nginx/src:ro'

  engine-server:
    build:
      context: .
      dockerfile: serverless.Dockerfile
      args:
        LAMBDA: engine
    environment:
      NODE_ENV: development
      PORT: '8082'
      DEBUG: watcher:*,fusion:*
      WATCH: 'true'
      ON_DEMAND:
      CONTENT_BASE:
      MONGO_URL:
    image: fusion-engine
    ports:
      - '8082:8082'
    volumes:
      - './engine/bundle:/workdir/engine/bundle:ro'
      - './engine/src:/workdir/engine/src:ro'

  resolver-server:
    build:
      context: .
      dockerfile: serverless.Dockerfile
      args:
        LAMBDA: resolver
    environment:
      PORT: '8083'
      DEBUG: watcher:*
      WATCH: 'true'
      HTTP_ENGINE: http://engine-server:8082
      LAMBDA_ENGINE:
    image: fusion-resolver
    links:
      - 'engine-server'
    ports:
      - '8083:8083'
    volumes:
      - './resolver/config:/workdir/resolver/config:ro'
      - './resolver/src:/workdir/resolver/src:ro'
