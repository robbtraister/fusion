version: '3.4'

x-environment: &_environment
  DB_NAME: ${DB_NAME:-fusion_dev}
  MONGO_URL: mongodb://data:27017/${DB_NAME:-fusion_dev}
  PB_MONGODB_URI: mongodb://data:27017/${DB_NAME:-fusion_dev}

  HTTP_ENGINE: http://engine:8080
  HTTP_RESOLVER: http://resolver:8080
  LAMBDA_ENGINE:
  LAMBDA_RESOLVER:

  NODE_ENV:
  ENVIRONMENT: localhost
  CONTEXT_PATH:
  ON_DEMAND:
  DEBUG: fusion:*

networks:
  fusion:
    driver: bridge
    external: false
    internal: false

services:
  data:
    image: quay.io/washpost/mongo-localhost
    # build: ./data
    environment:
      <<: *_environment
      WATCH: 'true'
    networks:
      fusion:
        aliases:
          - db
          - database
    ports:
      - 27017:27017
    volumes:
      - '${FUSION_REPO:-.}/data/db:/data/db:rw'
      - '${FUSION_REPO:-.}/data/dumps:/data/dumps:rw'
      - '${FUSION_REPO:-.}/data/restore:/data/restore:rw'

  content-cache:
    image: memcached
    # max size is 10MB
    command: memcached -I 10m
    networks:
      - fusion

  cache-proxy:
    build: ./cache-proxy
    depends_on:
      - content-cache
    networks:
      - fusion
    ports:
      - 9030:8080
    environment:
      CACHE_PROXY_CREDENTIALS: |
        staging:password
      CACHE_NODES: |
        content-cache:11211
    volumes:
      - './cache-proxy/src:/etc/nginx/src:ro'

  engine:
    build: ./engine
    command: start:dev
    depends_on:
      - data
      - cache-proxy
    env_file:
      - .env
    environment:
      <<: *_environment
      CONTENT_BASE:
      MINIFY:
      # because we import ALL variables from .env, ignore PORT
      PORT: 8080
      CACHE_PROXY_URL: http://staging:password@cache-proxy:8080/cache
      CACHE_PREFIX: '0803'
    networks:
      - fusion
    ports:
      - 9010:8080
    volumes:
      - './engine/src:/workdir/engine/src:ro'
      - '${FUSION_REPO:-./bundle}/.dist:/workdir/engine/bundle/dist:rw'
      - '${FUSION_REPO:-./bundle}/.generated:/workdir/engine/bundle/generated:rw'
      - '${FUSION_REPO:-./bundle}/src:/workdir/engine/bundle/src:rw'

  resolver:
    build: ./resolver
    depends_on:
      - data
      - engine
    environment:
      <<: *_environment
      RESOLVE_FROM_DB: 'true' # should only be 'true' for local dev environments
      TRAILING_SLASH_RULE: # Options are FORCE, DROP, or NOOP
    networks:
      - fusion
    ports:
      - 9020:8080
    volumes:
      - './resolver/config:/workdir/resolver/config:ro'
      - './resolver/src:/workdir/resolver/src:ro'

  origin:
    build: ./origin
    depends_on:
      - engine
      - resolver
    environment:
      <<: *_environment
      IS_ADMIN: 'true'
    networks:
      - fusion
    ports:
      - 80:8080
      - 8090:8090
    volumes:
      - './origin/src:/etc/nginx/src:ro'
      - '${FUSION_REPO:-./bundle}/.dist:/etc/nginx/dist:ro'
      - '${FUSION_REPO:-./bundle}/src/resources:/etc/nginx/resources:ro'
